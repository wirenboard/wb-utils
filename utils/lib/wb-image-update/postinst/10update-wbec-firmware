#!/bin/bash -e

# Called from install_update.sh with arguments
# /path/to/script /path/to/new/rootfs [flag1 [flag2 ...]]
#
# This script may run in Busybox initramfs environment,
# so if you need some special tools or features, use ones from rootfs.
#
# /dev, /proc and /sys are already bind-mounted
# from host system to rootfs tree.

if [ $# -lt 1 ]; then
    echo "Usage: $0 path/to/rootfs [flag1 [flag2 ...]]"
    exit 2
fi

ROOTFS="$1"
shift
FLAGS="$*"

flag_set() {
	echo "$FLAGS" | grep -- "--$1" >/dev/null 2>&1
}

if ! flag_set "factoryreset" ; then
    echo "Skipping WBEC firmware update (use factory reset to do it)"
    exit
fi

device_factory_fdt() {
    local TMPFILE
    TMPFILE=$(mktemp)
    trap 'rm -f $TMPFILE' RETURN

    # creating empty DTB to apply overlay to
    echo "/dts-v1/; / { wirenboard {}; };" | dtc -I dts -O dtb -o "$TMPFILE"
    dd if=/dev/mmcblk0 bs=512 skip=2016 count=32 | fdtoverlay -i "$TMPFILE" -o - - | fdtget -t s - /wirenboard factory-fdt
}

FACTORY_DTB="/boot/dtbs/$(device_factory_fdt).fit"

if [ ! -f "$ROOTFS/$FACTORY_DTB" ]; then
    echo "Cannot find factory DTB $FACTORY_DTB"
    exit 1
fi

# extracting compatible property from factory DTB
COMPATIBLE=$(fdtget -t s "$ROOTFS/$FACTORY_DTB" / compatible)

case "$COMPATIBLE" in
    *wirenboard,wirenboard-74x*)
        echo "Trying to update WBEC firmware"
        chroot "$ROOTFS" /bin/bash -c "export DTB=$FACTORY_DTB; /usr/bin/wb-ec-firmware-update"
        ;;
    *)
        echo "This Wiren Board does not have WBEC, exiting"
        ;;
esac
